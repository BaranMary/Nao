<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram scale="100">
            <Box name="lifting" id="1" localization="8" tooltip="" x="334" y="211">
              <bitmap>media/images/box/box-timeLine.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="10" start_frame="1" end_frame="590" size="590">
                <BehaviorLayer name="ready">
                  <BehaviorKeyframe name="keyframe10" index="10">
                    <Diagram scale="70.7107">
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="223" y="60">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="I&apos;m ready, please give me the barbell" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <BehaviorLayer name="one">
                  <BehaviorKeyframe name="keyframe115" index="115">
                    <Diagram>
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="165" y="67">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="one" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <BehaviorLayer name="two">
                  <BehaviorKeyframe name="keyframe155" index="155">
                    <Diagram>
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="184" y="38">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="two" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <BehaviorLayer name="three">
                  <BehaviorKeyframe name="keyframe195" index="195">
                    <Diagram>
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="208" y="53">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="three, good job" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <BehaviorLayer name="four">
                  <BehaviorKeyframe name="keyframe235" index="235">
                    <Diagram>
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="137" y="64">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="four" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <BehaviorLayer name="five">
                  <BehaviorKeyframe name="keyframe275" index="275">
                    <Diagram>
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="106" y="76">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="five" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <BehaviorLayer name="six">
                  <BehaviorKeyframe name="keyframe315" index="315">
                    <Diagram>
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="122" y="58">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="we have four more" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <BehaviorLayer name="seven">
                  <BehaviorKeyframe name="keyframe355" index="355">
                    <Diagram>
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="99" y="42">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="seven" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <BehaviorLayer name="eight">
                  <BehaviorKeyframe name="keyframe395" index="395">
                    <Diagram>
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="86" y="37">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="eight" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <BehaviorLayer name="nine">
                  <BehaviorKeyframe name="keyframe435" index="435">
                    <Diagram>
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="110" y="29">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="nine" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <BehaviorLayer name="ten">
                  <BehaviorKeyframe name="keyframe475" index="475">
                    <Diagram>
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="101" y="38">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="ten, good job" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <BehaviorLayer name="take back barbell">
                  <BehaviorKeyframe name="keyframe504" index="504">
                    <Diagram>
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="135" y="35">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="we did it! Please take back your barbell" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <BehaviorLayer name="bgm">
                  <BehaviorKeyframe name="keyframe70" index="70">
                    <Diagram>
                      <Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="132" y="51">
                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../Fireworks.mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                        <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="20" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                        <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="86" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                        <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                        <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="403" y="93">
                                  <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.player = self.session().service('ALAudioPlayer')
        self.playerStop = self.session().service('ALAudioPlayer') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []
        self.mem = self.session().service("ALMemory")

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.pCall("playFileInLoop",p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.pCall("playFileFromPosition",p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.mem.insertData("currentBGMID",id)
            self.ids.append(id)
            self.player.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                  <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                  <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                  <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                </Box>
                                <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                  <bitmap>media/images/box/folder.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                  <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                </Box>
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Audio player" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                  <BehaviorKeyframe name="keyframe495" index="495">
                    <Diagram />
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <BehaviorLayer name="follow me">
                  <BehaviorKeyframe name="keyframe54" index="54">
                    <Diagram>
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="104" y="47">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="96" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="please follow my action" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <BehaviorLayer name="vol_adjust">
                  <BehaviorKeyframe name="keyframe179" index="179">
                    <Diagram>
                      <Box name="adjust" id="1" localization="8" tooltip="" x="163" y="59">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.mem = self.session().service("ALMemory")
        self.player = self.session().service("ALAudioPlayer")

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):

        id = self.mem.getData("currentBGMID",1)
        self.player.setVolume(id,0.25)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                  <BehaviorKeyframe name="keyframe208" index="208">
                    <Diagram>
                      <Box name="adjust" id="1" localization="8" tooltip="" x="170" y="40">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.mem = self.session().service("ALMemory")
        self.player = self.session().service("ALAudioPlayer")

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):

        id = self.mem.getData("currentBGMID",1)
        self.player.setVolume(id,0.8)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                  <BehaviorKeyframe name="keyframe301" index="301">
                    <Diagram>
                      <Box name="adjust" id="1" localization="8" tooltip="" x="87" y="61">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.mem = self.session().service("ALMemory")
        self.player = self.session().service("ALAudioPlayer")

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):

        id = self.mem.getData("currentBGMID",1)
        self.player.setVolume(id,0.25)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                  <BehaviorKeyframe name="keyframe324" index="324">
                    <Diagram>
                      <Box name="adjust" id="1" localization="8" tooltip="" x="108" y="42">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.mem = self.session().service("ALMemory")
        self.player = self.session().service("ALAudioPlayer")

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):

        id = self.mem.getData("currentBGMID",1)
        self.player.setVolume(id,0.8)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="">
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="10" value="-71.7172" />
                    <Key frame="53" value="-71.7172" />
                    <Key frame="70" value="-82.7916" />
                    <Key frame="95" value="-67.4984" />
                    <Key frame="115" value="-82.7916" />
                    <Key frame="135" value="-67.4984" />
                    <Key frame="155" value="-82.7916" />
                    <Key frame="175" value="-67.4984" />
                    <Key frame="195" value="-82.7916" />
                    <Key frame="215" value="-67.4984" />
                    <Key frame="235" value="-82.7916" />
                    <Key frame="255" value="-67.4984" />
                    <Key frame="275" value="-82.7916" />
                    <Key frame="295" value="-67.4984" />
                    <Key frame="315" value="-82.7916" />
                    <Key frame="335" value="-67.4984" />
                    <Key frame="355" value="-82.7916" />
                    <Key frame="375" value="-67.4984" />
                    <Key frame="395" value="-82.7916" />
                    <Key frame="415" value="-67.4984" />
                    <Key frame="435" value="-82.7916" />
                    <Key frame="455" value="-67.4984" />
                    <Key frame="475" value="-82.7916" />
                    <Key frame="495" value="-71.7172" />
                    <Key frame="535" value="-71.7172" />
                    <Key frame="576" value="-71.7172" />
                    <Key frame="590" value="-23.6405" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="10" value="-96.156" />
                    <Key frame="53" value="-96.156" />
                    <Key frame="70" value="-90.6188" />
                    <Key frame="95" value="-90.3551" />
                    <Key frame="115" value="-90.6188" />
                    <Key frame="135" value="-90.3551" />
                    <Key frame="155" value="-90.6188" />
                    <Key frame="175" value="-90.3551" />
                    <Key frame="195" value="-90.6188" />
                    <Key frame="215" value="-90.3551" />
                    <Key frame="235" value="-90.6188" />
                    <Key frame="255" value="-90.3551" />
                    <Key frame="275" value="-90.6188" />
                    <Key frame="295" value="-90.3551" />
                    <Key frame="315" value="-90.6188" />
                    <Key frame="335" value="-90.3551" />
                    <Key frame="355" value="-90.6188" />
                    <Key frame="375" value="-90.3551" />
                    <Key frame="395" value="-90.6188" />
                    <Key frame="415" value="-90.3551" />
                    <Key frame="435" value="-90.6188" />
                    <Key frame="455" value="-90.3551" />
                    <Key frame="475" value="-90.6188" />
                    <Key frame="495" value="-96.156" />
                    <Key frame="535" value="-96.156" />
                    <Key frame="576" value="-96.156" />
                    <Key frame="590" value="-70.3158" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="10" value="0.5916" />
                    <Key frame="53" value="0.5916" />
                    <Key frame="70" value="0.15" />
                    <Key frame="95" value="0.1708" />
                    <Key frame="115" value="0.15" />
                    <Key frame="135" value="0.1708" />
                    <Key frame="155" value="0.15" />
                    <Key frame="175" value="0.1708" />
                    <Key frame="195" value="0.15" />
                    <Key frame="215" value="0.1708" />
                    <Key frame="235" value="0.15" />
                    <Key frame="255" value="0.1708" />
                    <Key frame="275" value="0.15" />
                    <Key frame="295" value="0.1708" />
                    <Key frame="315" value="0.15" />
                    <Key frame="335" value="0.1708" />
                    <Key frame="355" value="0.15" />
                    <Key frame="375" value="0.1708" />
                    <Key frame="395" value="0.15" />
                    <Key frame="415" value="0.1708" />
                    <Key frame="435" value="0.15" />
                    <Key frame="455" value="0.1708" />
                    <Key frame="475" value="0.15" />
                    <Key frame="495" value="0.5916" />
                    <Key frame="535" value="0.5916" />
                    <Key frame="576" value="0.5916" />
                    <Key frame="590" value="0.2896" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="10" value="78.4849" />
                    <Key frame="53" value="78.4849" />
                    <Key frame="70" value="91.2292" />
                    <Key frame="95" value="-22.1511" />
                    <Key frame="115" value="91.2292" />
                    <Key frame="135" value="-22.1511" />
                    <Key frame="155" value="91.2292" />
                    <Key frame="175" value="-22.1511" />
                    <Key frame="195" value="91.2292" />
                    <Key frame="215" value="-22.1511" />
                    <Key frame="235" value="91.2292" />
                    <Key frame="255" value="-22.1511" />
                    <Key frame="275" value="91.2292" />
                    <Key frame="295" value="-22.1511" />
                    <Key frame="315" value="91.2292" />
                    <Key frame="335" value="-22.1511" />
                    <Key frame="355" value="91.2292" />
                    <Key frame="375" value="-22.1511" />
                    <Key frame="395" value="91.2292" />
                    <Key frame="415" value="-22.1511" />
                    <Key frame="435" value="91.2292" />
                    <Key frame="455" value="-22.1511" />
                    <Key frame="475" value="91.2292" />
                    <Key frame="495" value="78.4849" />
                    <Key frame="535" value="78.4849" />
                    <Key frame="576" value="78.4849" />
                    <Key frame="590" value="82.7916" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="10" value="-1.76024" />
                    <Key frame="53" value="-1.76024" />
                    <Key frame="70" value="-5.01224" />
                    <Key frame="95" value="-3.1665" />
                    <Key frame="115" value="-5.01224" />
                    <Key frame="135" value="-3.1665" />
                    <Key frame="155" value="-5.01224" />
                    <Key frame="175" value="-3.1665" />
                    <Key frame="195" value="-5.01224" />
                    <Key frame="215" value="-3.1665" />
                    <Key frame="235" value="-5.01224" />
                    <Key frame="255" value="-3.1665" />
                    <Key frame="275" value="-5.01224" />
                    <Key frame="295" value="-3.1665" />
                    <Key frame="315" value="-5.01224" />
                    <Key frame="335" value="-3.1665" />
                    <Key frame="355" value="-5.01224" />
                    <Key frame="375" value="-3.1665" />
                    <Key frame="395" value="-5.01224" />
                    <Key frame="415" value="-3.1665" />
                    <Key frame="435" value="-5.01224" />
                    <Key frame="455" value="-3.1665" />
                    <Key frame="475" value="-5.01224" />
                    <Key frame="495" value="-1.76024" />
                    <Key frame="535" value="-1.76024" />
                    <Key frame="576" value="-1.76024" />
                    <Key frame="590" value="11.5114" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="10" value="-85.9605" />
                    <Key frame="53" value="-85.9605" />
                    <Key frame="70" value="-76.4682" />
                    <Key frame="95" value="-77.8745" />
                    <Key frame="115" value="-76.4682" />
                    <Key frame="135" value="-77.8745" />
                    <Key frame="155" value="-76.4682" />
                    <Key frame="175" value="-77.8745" />
                    <Key frame="195" value="-76.4682" />
                    <Key frame="215" value="-77.8745" />
                    <Key frame="235" value="-76.4682" />
                    <Key frame="255" value="-77.8745" />
                    <Key frame="275" value="-76.4682" />
                    <Key frame="295" value="-77.8745" />
                    <Key frame="315" value="-76.4682" />
                    <Key frame="335" value="-77.8745" />
                    <Key frame="355" value="-76.4682" />
                    <Key frame="375" value="-77.8745" />
                    <Key frame="395" value="-76.4682" />
                    <Key frame="415" value="-77.8745" />
                    <Key frame="435" value="-76.4682" />
                    <Key frame="455" value="-77.8745" />
                    <Key frame="475" value="-76.4682" />
                    <Key frame="495" value="-85.9605" />
                    <Key frame="535" value="-85.9605" />
                    <Key frame="576" value="-85.9605" />
                    <Key frame="590" value="3.60116" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="10" value="70.14" />
                    <Key frame="53" value="70.14" />
                    <Key frame="70" value="77.0834" />
                    <Key frame="95" value="68.2064" />
                    <Key frame="115" value="77.0834" />
                    <Key frame="135" value="68.2064" />
                    <Key frame="155" value="77.0834" />
                    <Key frame="175" value="68.2064" />
                    <Key frame="195" value="77.0834" />
                    <Key frame="215" value="68.2064" />
                    <Key frame="235" value="77.0834" />
                    <Key frame="255" value="68.2064" />
                    <Key frame="275" value="77.0834" />
                    <Key frame="295" value="68.2064" />
                    <Key frame="315" value="77.0834" />
                    <Key frame="335" value="68.2064" />
                    <Key frame="355" value="77.0834" />
                    <Key frame="375" value="68.2064" />
                    <Key frame="395" value="77.0834" />
                    <Key frame="415" value="68.2064" />
                    <Key frame="435" value="77.0834" />
                    <Key frame="455" value="68.2064" />
                    <Key frame="475" value="77.0834" />
                    <Key frame="495" value="70.14" />
                    <Key frame="535" value="70.14" />
                    <Key frame="576" value="70.14" />
                    <Key frame="590" value="24.9637" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="10" value="93.5144" />
                    <Key frame="53" value="93.5144" />
                    <Key frame="70" value="89.2956" />
                    <Key frame="95" value="92.7234" />
                    <Key frame="115" value="89.2956" />
                    <Key frame="135" value="92.7234" />
                    <Key frame="155" value="89.2956" />
                    <Key frame="175" value="92.7234" />
                    <Key frame="195" value="89.2956" />
                    <Key frame="215" value="92.7234" />
                    <Key frame="235" value="89.2956" />
                    <Key frame="255" value="92.7234" />
                    <Key frame="275" value="89.2956" />
                    <Key frame="295" value="92.7234" />
                    <Key frame="315" value="89.2956" />
                    <Key frame="335" value="92.7234" />
                    <Key frame="355" value="89.2956" />
                    <Key frame="375" value="92.7234" />
                    <Key frame="395" value="89.2956" />
                    <Key frame="415" value="92.7234" />
                    <Key frame="435" value="89.2956" />
                    <Key frame="455" value="92.7234" />
                    <Key frame="475" value="89.2956" />
                    <Key frame="495" value="93.5144" />
                    <Key frame="535" value="93.5144" />
                    <Key frame="576" value="93.5144" />
                    <Key frame="590" value="69.8715" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="10" value="0.6936" />
                    <Key frame="53" value="0.6936" />
                    <Key frame="70" value="0.18" />
                    <Key frame="95" value="0.1992" />
                    <Key frame="115" value="0.18" />
                    <Key frame="135" value="0.1992" />
                    <Key frame="155" value="0.18" />
                    <Key frame="175" value="0.1992" />
                    <Key frame="195" value="0.18" />
                    <Key frame="215" value="0.1992" />
                    <Key frame="235" value="0.18" />
                    <Key frame="255" value="0.1992" />
                    <Key frame="275" value="0.18" />
                    <Key frame="295" value="0.1992" />
                    <Key frame="315" value="0.18" />
                    <Key frame="335" value="0.1992" />
                    <Key frame="355" value="0.18" />
                    <Key frame="375" value="0.1992" />
                    <Key frame="395" value="0.18" />
                    <Key frame="415" value="0.1992" />
                    <Key frame="435" value="0.18" />
                    <Key frame="455" value="0.1992" />
                    <Key frame="475" value="0.18" />
                    <Key frame="495" value="0.6936" />
                    <Key frame="535" value="0.6936" />
                    <Key frame="576" value="0.6936" />
                    <Key frame="590" value="0.2892" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="10" value="75.5893" />
                    <Key frame="53" value="75.5893" />
                    <Key frame="70" value="83.2359" />
                    <Key frame="95" value="-20.3885" />
                    <Key frame="115" value="83.2359" />
                    <Key frame="135" value="-20.3885" />
                    <Key frame="155" value="83.2359" />
                    <Key frame="175" value="-20.3885" />
                    <Key frame="195" value="83.2359" />
                    <Key frame="215" value="-20.3885" />
                    <Key frame="235" value="83.2359" />
                    <Key frame="255" value="-20.3885" />
                    <Key frame="275" value="83.2359" />
                    <Key frame="295" value="-20.3885" />
                    <Key frame="315" value="83.2359" />
                    <Key frame="335" value="-20.3885" />
                    <Key frame="355" value="83.2359" />
                    <Key frame="375" value="-20.3885" />
                    <Key frame="395" value="83.2359" />
                    <Key frame="415" value="-20.3885" />
                    <Key frame="435" value="83.2359" />
                    <Key frame="455" value="-20.3885" />
                    <Key frame="475" value="83.2359" />
                    <Key frame="495" value="75.5893" />
                    <Key frame="535" value="75.5893" />
                    <Key frame="576" value="75.5893" />
                    <Key frame="590" value="82.7964" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="10" value="8.08364" />
                    <Key frame="53" value="8.08364" />
                    <Key frame="70" value="9.22623" />
                    <Key frame="95" value="3.60116" />
                    <Key frame="115" value="9.22623" />
                    <Key frame="135" value="3.60116" />
                    <Key frame="155" value="9.22623" />
                    <Key frame="175" value="3.60116" />
                    <Key frame="195" value="9.22623" />
                    <Key frame="215" value="3.60116" />
                    <Key frame="235" value="9.22623" />
                    <Key frame="255" value="3.60116" />
                    <Key frame="275" value="9.22623" />
                    <Key frame="295" value="3.60116" />
                    <Key frame="315" value="9.22623" />
                    <Key frame="335" value="3.60116" />
                    <Key frame="355" value="9.22623" />
                    <Key frame="375" value="3.60116" />
                    <Key frame="395" value="9.22623" />
                    <Key frame="415" value="3.60116" />
                    <Key frame="435" value="9.22623" />
                    <Key frame="455" value="3.60116" />
                    <Key frame="475" value="9.22623" />
                    <Key frame="495" value="8.08364" />
                    <Key frame="535" value="8.08364" />
                    <Key frame="576" value="8.08364" />
                    <Key frame="590" value="-11.7799" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="10" value="81.7369" />
                    <Key frame="53" value="81.7369" />
                    <Key frame="70" value="83.8463" />
                    <Key frame="95" value="81.9127" />
                    <Key frame="115" value="83.8463" />
                    <Key frame="135" value="81.9127" />
                    <Key frame="155" value="83.8463" />
                    <Key frame="175" value="81.9127" />
                    <Key frame="195" value="83.8463" />
                    <Key frame="215" value="81.9127" />
                    <Key frame="235" value="83.8463" />
                    <Key frame="255" value="81.9127" />
                    <Key frame="275" value="83.8463" />
                    <Key frame="295" value="81.9127" />
                    <Key frame="315" value="83.8463" />
                    <Key frame="335" value="81.9127" />
                    <Key frame="355" value="83.8463" />
                    <Key frame="375" value="81.9127" />
                    <Key frame="395" value="83.8463" />
                    <Key frame="415" value="81.9127" />
                    <Key frame="435" value="83.8463" />
                    <Key frame="455" value="81.9127" />
                    <Key frame="475" value="83.8463" />
                    <Key frame="495" value="81.7369" />
                    <Key frame="535" value="81.7369" />
                    <Key frame="576" value="81.7369" />
                    <Key frame="590" value="3.68905" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="590" value="-9.05525" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="590" value="-1.40867" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="10" value="5.53478" />
                    <Key frame="53" value="5.53478" />
                    <Key frame="70" value="5.53478" />
                    <Key frame="95" value="5.53478" />
                    <Key frame="115" value="5.53478" />
                    <Key frame="135" value="5.53478" />
                    <Key frame="155" value="5.53478" />
                    <Key frame="175" value="5.53478" />
                    <Key frame="195" value="5.53478" />
                    <Key frame="215" value="5.53478" />
                    <Key frame="235" value="5.53478" />
                    <Key frame="255" value="5.53478" />
                    <Key frame="275" value="5.53478" />
                    <Key frame="295" value="5.53478" />
                    <Key frame="315" value="5.53478" />
                    <Key frame="335" value="5.53478" />
                    <Key frame="355" value="5.53478" />
                    <Key frame="375" value="5.53478" />
                    <Key frame="395" value="5.53478" />
                    <Key frame="415" value="5.53478" />
                    <Key frame="435" value="5.53478" />
                    <Key frame="455" value="5.53478" />
                    <Key frame="475" value="5.53478" />
                    <Key frame="495" value="5.53478" />
                    <Key frame="535" value="5.53478" />
                    <Key frame="576" value="5.53478" />
                    <Key frame="590" value="5.53478" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="10" value="-6.76526" />
                    <Key frame="53" value="-6.76526" />
                    <Key frame="70" value="-6.76526" />
                    <Key frame="95" value="-6.76526" />
                    <Key frame="115" value="-6.76526" />
                    <Key frame="135" value="-6.76526" />
                    <Key frame="155" value="-6.76526" />
                    <Key frame="175" value="-6.76526" />
                    <Key frame="195" value="-6.76526" />
                    <Key frame="215" value="-6.76526" />
                    <Key frame="235" value="-6.76526" />
                    <Key frame="255" value="-6.76526" />
                    <Key frame="275" value="-6.76526" />
                    <Key frame="295" value="-6.76526" />
                    <Key frame="315" value="-6.76526" />
                    <Key frame="335" value="-6.76526" />
                    <Key frame="355" value="-6.76526" />
                    <Key frame="375" value="-6.76526" />
                    <Key frame="395" value="-6.76526" />
                    <Key frame="415" value="-6.76526" />
                    <Key frame="435" value="-6.76526" />
                    <Key frame="455" value="-6.76526" />
                    <Key frame="475" value="-6.76526" />
                    <Key frame="495" value="-6.76526" />
                    <Key frame="535" value="-6.76526" />
                    <Key frame="576" value="-6.76526" />
                    <Key frame="590" value="-6.76526" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="10" value="7.12163" />
                    <Key frame="53" value="7.12163" />
                    <Key frame="70" value="7.12163" />
                    <Key frame="95" value="7.12163" />
                    <Key frame="115" value="7.12163" />
                    <Key frame="135" value="7.12163" />
                    <Key frame="155" value="7.12163" />
                    <Key frame="175" value="7.12163" />
                    <Key frame="195" value="7.12163" />
                    <Key frame="215" value="7.12163" />
                    <Key frame="235" value="7.12163" />
                    <Key frame="255" value="7.12163" />
                    <Key frame="275" value="7.12163" />
                    <Key frame="295" value="7.12163" />
                    <Key frame="315" value="7.12163" />
                    <Key frame="335" value="7.12163" />
                    <Key frame="355" value="7.12163" />
                    <Key frame="375" value="7.12163" />
                    <Key frame="395" value="7.12163" />
                    <Key frame="415" value="7.12163" />
                    <Key frame="435" value="7.12163" />
                    <Key frame="455" value="7.12163" />
                    <Key frame="475" value="7.12163" />
                    <Key frame="495" value="7.12163" />
                    <Key frame="535" value="7.12163" />
                    <Key frame="576" value="7.12163" />
                    <Key frame="590" value="7.12163" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="10" value="7.03374" />
                    <Key frame="53" value="7.03374" />
                    <Key frame="70" value="7.03374" />
                    <Key frame="95" value="7.03374" />
                    <Key frame="115" value="7.03374" />
                    <Key frame="135" value="7.03374" />
                    <Key frame="155" value="7.03374" />
                    <Key frame="175" value="7.03374" />
                    <Key frame="195" value="7.03374" />
                    <Key frame="215" value="7.03374" />
                    <Key frame="235" value="7.03374" />
                    <Key frame="255" value="7.03374" />
                    <Key frame="275" value="7.03374" />
                    <Key frame="295" value="7.03374" />
                    <Key frame="315" value="7.03374" />
                    <Key frame="335" value="7.03374" />
                    <Key frame="355" value="7.03374" />
                    <Key frame="375" value="7.03374" />
                    <Key frame="395" value="7.03374" />
                    <Key frame="415" value="7.03374" />
                    <Key frame="435" value="7.03374" />
                    <Key frame="455" value="7.03374" />
                    <Key frame="475" value="7.03374" />
                    <Key frame="495" value="7.03374" />
                    <Key frame="535" value="7.03374" />
                    <Key frame="576" value="7.03374" />
                    <Key frame="590" value="7.03374" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="10" value="-9.75358" />
                    <Key frame="53" value="-9.75358" />
                    <Key frame="70" value="-9.75358" />
                    <Key frame="95" value="-9.75358" />
                    <Key frame="115" value="-9.75358" />
                    <Key frame="135" value="-9.75358" />
                    <Key frame="155" value="-9.75358" />
                    <Key frame="175" value="-9.75358" />
                    <Key frame="195" value="-9.75358" />
                    <Key frame="215" value="-9.75358" />
                    <Key frame="235" value="-9.75358" />
                    <Key frame="255" value="-9.75358" />
                    <Key frame="275" value="-9.75358" />
                    <Key frame="295" value="-9.75358" />
                    <Key frame="315" value="-9.75358" />
                    <Key frame="335" value="-9.75358" />
                    <Key frame="355" value="-9.75358" />
                    <Key frame="375" value="-9.75358" />
                    <Key frame="395" value="-9.75358" />
                    <Key frame="415" value="-9.75358" />
                    <Key frame="435" value="-9.75358" />
                    <Key frame="455" value="-9.75358" />
                    <Key frame="475" value="-9.75358" />
                    <Key frame="495" value="-9.75358" />
                    <Key frame="535" value="-9.75358" />
                    <Key frame="576" value="-9.75358" />
                    <Key frame="590" value="-9.75358" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="10" value="-5.10013" />
                    <Key frame="53" value="-5.10013" />
                    <Key frame="70" value="-5.10013" />
                    <Key frame="95" value="-5.10013" />
                    <Key frame="115" value="-5.10013" />
                    <Key frame="135" value="-5.10013" />
                    <Key frame="155" value="-5.10013" />
                    <Key frame="175" value="-5.10013" />
                    <Key frame="195" value="-5.10013" />
                    <Key frame="215" value="-5.10013" />
                    <Key frame="235" value="-5.10013" />
                    <Key frame="255" value="-5.10013" />
                    <Key frame="275" value="-5.10013" />
                    <Key frame="295" value="-5.10013" />
                    <Key frame="315" value="-5.10013" />
                    <Key frame="335" value="-5.10013" />
                    <Key frame="355" value="-5.10013" />
                    <Key frame="375" value="-5.10013" />
                    <Key frame="395" value="-5.10013" />
                    <Key frame="415" value="-5.10013" />
                    <Key frame="435" value="-5.10013" />
                    <Key frame="455" value="-5.10013" />
                    <Key frame="475" value="-5.10013" />
                    <Key frame="495" value="-5.10013" />
                    <Key frame="535" value="-5.10013" />
                    <Key frame="576" value="-5.10013" />
                    <Key frame="590" value="-5.10013" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="10" value="5.10013" />
                    <Key frame="53" value="5.71537" />
                    <Key frame="70" value="5.71537" />
                    <Key frame="95" value="5.71537" />
                    <Key frame="115" value="5.71537" />
                    <Key frame="135" value="5.71537" />
                    <Key frame="155" value="5.71537" />
                    <Key frame="175" value="5.71537" />
                    <Key frame="195" value="5.71537" />
                    <Key frame="215" value="5.71537" />
                    <Key frame="235" value="5.71537" />
                    <Key frame="255" value="5.71537" />
                    <Key frame="275" value="5.71537" />
                    <Key frame="295" value="5.71537" />
                    <Key frame="315" value="5.71537" />
                    <Key frame="335" value="5.71537" />
                    <Key frame="355" value="5.71537" />
                    <Key frame="375" value="5.71537" />
                    <Key frame="395" value="5.71537" />
                    <Key frame="415" value="5.71537" />
                    <Key frame="435" value="5.71537" />
                    <Key frame="455" value="5.71537" />
                    <Key frame="475" value="5.71537" />
                    <Key frame="495" value="5.71537" />
                    <Key frame="535" value="5.71537" />
                    <Key frame="576" value="5.71537" />
                    <Key frame="590" value="5.71537" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="10" value="6.94585" />
                    <Key frame="53" value="6.94585" />
                    <Key frame="70" value="6.94585" />
                    <Key frame="95" value="6.94585" />
                    <Key frame="115" value="6.94585" />
                    <Key frame="135" value="6.94585" />
                    <Key frame="155" value="6.94585" />
                    <Key frame="175" value="6.94585" />
                    <Key frame="195" value="6.94585" />
                    <Key frame="215" value="6.94585" />
                    <Key frame="235" value="6.94585" />
                    <Key frame="255" value="6.94585" />
                    <Key frame="275" value="6.94585" />
                    <Key frame="295" value="6.94585" />
                    <Key frame="315" value="6.94585" />
                    <Key frame="335" value="6.94585" />
                    <Key frame="355" value="6.94585" />
                    <Key frame="375" value="6.94585" />
                    <Key frame="395" value="6.94585" />
                    <Key frame="415" value="6.94585" />
                    <Key frame="435" value="6.94585" />
                    <Key frame="455" value="6.94585" />
                    <Key frame="475" value="6.94585" />
                    <Key frame="495" value="6.94585" />
                    <Key frame="535" value="6.94585" />
                    <Key frame="576" value="6.94585" />
                    <Key frame="590" value="6.94585" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="10" value="7.20472" />
                    <Key frame="53" value="7.20472" />
                    <Key frame="70" value="7.20472" />
                    <Key frame="95" value="7.20472" />
                    <Key frame="115" value="7.20472" />
                    <Key frame="135" value="7.20472" />
                    <Key frame="155" value="7.20472" />
                    <Key frame="175" value="7.20472" />
                    <Key frame="195" value="7.20472" />
                    <Key frame="215" value="7.20472" />
                    <Key frame="235" value="7.20472" />
                    <Key frame="255" value="7.20472" />
                    <Key frame="275" value="7.20472" />
                    <Key frame="295" value="7.20472" />
                    <Key frame="315" value="7.20472" />
                    <Key frame="335" value="7.20472" />
                    <Key frame="355" value="7.20472" />
                    <Key frame="375" value="7.20472" />
                    <Key frame="395" value="7.20472" />
                    <Key frame="415" value="7.20472" />
                    <Key frame="435" value="7.20472" />
                    <Key frame="455" value="7.20472" />
                    <Key frame="475" value="7.20472" />
                    <Key frame="495" value="7.20472" />
                    <Key frame="535" value="7.20472" />
                    <Key frame="576" value="7.20472" />
                    <Key frame="590" value="7.20472" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="10" value="-6.58948" />
                    <Key frame="53" value="-6.58948" />
                    <Key frame="70" value="-6.58948" />
                    <Key frame="95" value="-6.58948" />
                    <Key frame="115" value="-6.58948" />
                    <Key frame="135" value="-6.58948" />
                    <Key frame="155" value="-6.58948" />
                    <Key frame="175" value="-6.58948" />
                    <Key frame="195" value="-6.58948" />
                    <Key frame="215" value="-6.58948" />
                    <Key frame="235" value="-6.58948" />
                    <Key frame="255" value="-6.58948" />
                    <Key frame="275" value="-6.58948" />
                    <Key frame="295" value="-6.58948" />
                    <Key frame="315" value="-6.58948" />
                    <Key frame="335" value="-6.58948" />
                    <Key frame="355" value="-6.58948" />
                    <Key frame="375" value="-6.58948" />
                    <Key frame="395" value="-6.58948" />
                    <Key frame="415" value="-6.58948" />
                    <Key frame="435" value="-6.58948" />
                    <Key frame="455" value="-6.58948" />
                    <Key frame="475" value="-6.58948" />
                    <Key frame="495" value="-6.58948" />
                    <Key frame="535" value="-6.58948" />
                    <Key frame="576" value="-6.58948" />
                    <Key frame="590" value="-6.58948" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="10" value="-9.75358" />
                    <Key frame="53" value="-9.75358" />
                    <Key frame="70" value="-9.75358" />
                    <Key frame="95" value="-9.75358" />
                    <Key frame="115" value="-9.75358" />
                    <Key frame="135" value="-9.75358" />
                    <Key frame="155" value="-9.75358" />
                    <Key frame="175" value="-9.75358" />
                    <Key frame="195" value="-9.75358" />
                    <Key frame="215" value="-9.75358" />
                    <Key frame="235" value="-9.75358" />
                    <Key frame="255" value="-9.75358" />
                    <Key frame="275" value="-9.75358" />
                    <Key frame="295" value="-9.75358" />
                    <Key frame="315" value="-9.75358" />
                    <Key frame="335" value="-9.75358" />
                    <Key frame="355" value="-9.75358" />
                    <Key frame="375" value="-9.75358" />
                    <Key frame="395" value="-9.75358" />
                    <Key frame="415" value="-9.75358" />
                    <Key frame="435" value="-9.75358" />
                    <Key frame="455" value="-9.75358" />
                    <Key frame="475" value="-9.75358" />
                    <Key frame="495" value="-9.75358" />
                    <Key frame="535" value="-9.75358" />
                    <Key frame="576" value="-9.75358" />
                    <Key frame="590" value="-9.75358" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="10" value="-5.44688" />
                    <Key frame="53" value="-5.44688" />
                    <Key frame="70" value="-5.44688" />
                    <Key frame="95" value="-5.44688" />
                    <Key frame="115" value="-5.44688" />
                    <Key frame="135" value="-5.44688" />
                    <Key frame="155" value="-5.44688" />
                    <Key frame="175" value="-5.44688" />
                    <Key frame="195" value="-5.44688" />
                    <Key frame="215" value="-5.44688" />
                    <Key frame="235" value="-5.44688" />
                    <Key frame="255" value="-5.44688" />
                    <Key frame="275" value="-5.44688" />
                    <Key frame="295" value="-5.44688" />
                    <Key frame="315" value="-5.44688" />
                    <Key frame="335" value="-5.44688" />
                    <Key frame="355" value="-5.44688" />
                    <Key frame="375" value="-5.44688" />
                    <Key frame="395" value="-5.44688" />
                    <Key frame="415" value="-5.44688" />
                    <Key frame="435" value="-5.44688" />
                    <Key frame="455" value="-5.44688" />
                    <Key frame="475" value="-5.44688" />
                    <Key frame="495" value="-5.44688" />
                    <Key frame="535" value="-5.44688" />
                    <Key frame="576" value="-5.44688" />
                    <Key frame="590" value="-5.44688" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="dolifting" id="2" localization="8" tooltip="" x="135" y="205">
              <dialogFile>../dolifting/dolifting.dlg</dialogFile>
              <bitmap>media/images/box/box-dialog.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Output name="do" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
            </Box>
            <Box name="pushup" id="3" localization="8" tooltip="" x="146" y="63">
              <dialogFile>../pushup/pushup.dlg</dialogFile>
              <bitmap>media/images/box/box-dialog.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Output name="do" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
            </Box>
            <Box name="pushup_combol" id="12" localization="8" tooltip="Enter description here" x="343" y="59">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="pushup_ready_onStart" type="1" type_size="1" nature="2" inner="0" tooltip="This input has been automatically generated&#x0A;by converting several boxes into a single box." id="2" />
              <Output name="pushup_restore_onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="pushup_ready" id="4" localization="8" tooltip="" x="191" y="19">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="249" size="249">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram />
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="41" value="5.44688" />
                              <Key frame="84" value="5.44688" />
                              <Key frame="109" value="11.5114" />
                              <Key frame="132" value="12.3903" />
                              <Key frame="159" value="12.3903" />
                              <Key frame="184" value="12.3903" />
                              <Key frame="205" value="12.3903" />
                              <Key frame="238" value="12.3903" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="41" value="-0.441859" />
                              <Key frame="84" value="-0.441859" />
                              <Key frame="109" value="-0.441859" />
                              <Key frame="132" value="-0.178186" />
                              <Key frame="159" value="-0.178186" />
                              <Key frame="184" value="-0.178186" />
                              <Key frame="205" value="-0.178186" />
                              <Key frame="238" value="-0.178186" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="41" value="-68.2943" />
                              <Key frame="84" value="-51.9464" />
                              <Key frame="109" value="-62.4055" />
                              <Key frame="132" value="-62.4934" />
                              <Key frame="159" value="-68.7337" />
                              <Key frame="184" value="-69.0853" />
                              <Key frame="205" value="-69.0853" />
                              <Key frame="238" value="-68.2943" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="41" value="4.48488" />
                              <Key frame="84" value="7.20952" />
                              <Key frame="109" value="8.17634" />
                              <Key frame="132" value="5.3638" />
                              <Key frame="159" value="-0.349159" />
                              <Key frame="184" value="-3.0738" />
                              <Key frame="205" value="-2.72224" />
                              <Key frame="238" value="-0.173378" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="41" value="-0.700723" />
                              <Key frame="84" value="-0.700723" />
                              <Key frame="109" value="-1.22808" />
                              <Key frame="132" value="-3.51326" />
                              <Key frame="159" value="-3.24959" />
                              <Key frame="184" value="-2.72224" />
                              <Key frame="205" value="-2.63435" />
                              <Key frame="238" value="-0.261268" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="41" value="3.68905" />
                              <Key frame="84" value="15.7302" />
                              <Key frame="109" value="12.7419" />
                              <Key frame="132" value="11.6872" />
                              <Key frame="159" value="11.6872" />
                              <Key frame="184" value="11.6872" />
                              <Key frame="205" value="12.3024" />
                              <Key frame="238" value="12.8298" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="41" value="0.05" />
                              <Key frame="84" value="0.05" />
                              <Key frame="109" value="0.0908" />
                              <Key frame="132" value="0.084" />
                              <Key frame="159" value="0.084" />
                              <Key frame="184" value="0.084" />
                              <Key frame="205" value="0.084" />
                              <Key frame="238" value="0.084" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="41" value="-39.7247" />
                              <Key frame="84" value="-69.8715" />
                              <Key frame="109" value="-88.3288" />
                              <Key frame="132" value="-88.153" />
                              <Key frame="159" value="-82.8795" />
                              <Key frame="184" value="-69.7836" />
                              <Key frame="205" value="-20.1248" />
                              <Key frame="238" value="-5.18321" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="41" value="-4.83163" />
                              <Key frame="84" value="2.81494" />
                              <Key frame="109" value="-2.81013" />
                              <Key frame="132" value="-2.98591" />
                              <Key frame="159" value="-15.2908" />
                              <Key frame="184" value="1.49656" />
                              <Key frame="205" value="1.23289" />
                              <Key frame="238" value="0.61764" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="41" value="-13.8845" />
                              <Key frame="84" value="-23.201" />
                              <Key frame="109" value="-28.914" />
                              <Key frame="132" value="-29.3534" />
                              <Key frame="159" value="-30.1445" />
                              <Key frame="184" value="-10.6325" />
                              <Key frame="205" value="-4.56796" />
                              <Key frame="238" value="-0.524941" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="41" value="120.937" />
                              <Key frame="84" value="121.903" />
                              <Key frame="109" value="122.255" />
                              <Key frame="132" value="120.585" />
                              <Key frame="159" value="121.288" />
                              <Key frame="184" value="79.2759" />
                              <Key frame="205" value="30.8476" />
                              <Key frame="238" value="19.158" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="41" value="92.3718" />
                              <Key frame="84" value="67.7621" />
                              <Key frame="109" value="28.5624" />
                              <Key frame="132" value="28.1229" />
                              <Key frame="159" value="28.914" />
                              <Key frame="184" value="29.7929" />
                              <Key frame="205" value="29.705" />
                              <Key frame="238" value="26.0135" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="41" value="10.193" />
                              <Key frame="84" value="15.2908" />
                              <Key frame="109" value="14.2361" />
                              <Key frame="132" value="12.3903" />
                              <Key frame="159" value="12.8298" />
                              <Key frame="184" value="13.3571" />
                              <Key frame="205" value="15.5544" />
                              <Key frame="238" value="1.31597" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="41" value="-105.121" />
                              <Key frame="84" value="-104.681" />
                              <Key frame="109" value="-3.69386" />
                              <Key frame="132" value="-2.90283" />
                              <Key frame="159" value="-7.73688" />
                              <Key frame="184" value="-4.83644" />
                              <Key frame="205" value="-4.83644" />
                              <Key frame="238" value="-8.44001" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="41" value="-67.85" />
                              <Key frame="84" value="-55.1057" />
                              <Key frame="109" value="-53.0842" />
                              <Key frame="132" value="-55.1936" />
                              <Key frame="159" value="-68.5531" />
                              <Key frame="184" value="-68.7289" />
                              <Key frame="205" value="-65.7406" />
                              <Key frame="238" value="-67.9379" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="41" value="-4.12851" />
                              <Key frame="84" value="7.91266" />
                              <Key frame="109" value="12.6588" />
                              <Key frame="132" value="8.35212" />
                              <Key frame="159" value="-0.700723" />
                              <Key frame="184" value="3.34228" />
                              <Key frame="205" value="3.78175" />
                              <Key frame="238" value="3.1665" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="41" value="1.40867" />
                              <Key frame="84" value="2.81494" />
                              <Key frame="109" value="2.90283" />
                              <Key frame="132" value="2.02391" />
                              <Key frame="159" value="1.32078" />
                              <Key frame="184" value="2.63916" />
                              <Key frame="205" value="3.34228" />
                              <Key frame="238" value="1.40867" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="41" value="-6.06693" />
                              <Key frame="84" value="-6.06693" />
                              <Key frame="109" value="-4.22121" />
                              <Key frame="132" value="1.57965" />
                              <Key frame="159" value="1.75543" />
                              <Key frame="184" value="1.75543" />
                              <Key frame="205" value="1.75543" />
                              <Key frame="238" value="2.37068" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="41" value="0.0332" />
                              <Key frame="84" value="0.0332" />
                              <Key frame="109" value="0.0332" />
                              <Key frame="132" value="0.0332" />
                              <Key frame="159" value="0.0332" />
                              <Key frame="184" value="0.0332" />
                              <Key frame="205" value="0.0332" />
                              <Key frame="238" value="0.0332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="41" value="-40.081" />
                              <Key frame="84" value="-45.794" />
                              <Key frame="109" value="-61.5266" />
                              <Key frame="132" value="-61.3508" />
                              <Key frame="159" value="-81.3023" />
                              <Key frame="184" value="-67.4154" />
                              <Key frame="205" value="-15.9987" />
                              <Key frame="238" value="-6.06693" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="41" value="4.92435" />
                              <Key frame="84" value="5.18802" />
                              <Key frame="109" value="18.8112" />
                              <Key frame="132" value="19.5144" />
                              <Key frame="159" value="18.196" />
                              <Key frame="184" value="-2.107" />
                              <Key frame="205" value="-1.49175" />
                              <Key frame="238" value="-2.1949" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="41" value="-13.8845" />
                              <Key frame="84" value="-23.201" />
                              <Key frame="109" value="-28.914" />
                              <Key frame="132" value="-29.3534" />
                              <Key frame="159" value="-30.1445" />
                              <Key frame="184" value="-10.6325" />
                              <Key frame="205" value="-4.56796" />
                              <Key frame="238" value="-0.524941" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="41" value="120.941" />
                              <Key frame="84" value="107.758" />
                              <Key frame="109" value="98.3532" />
                              <Key frame="132" value="98.2654" />
                              <Key frame="159" value="121.117" />
                              <Key frame="184" value="76.3803" />
                              <Key frame="205" value="22.6785" />
                              <Key frame="238" value="19.2507" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="41" value="89.652" />
                              <Key frame="84" value="90.2672" />
                              <Key frame="109" value="77.1713" />
                              <Key frame="132" value="32.8739" />
                              <Key frame="159" value="30.4129" />
                              <Key frame="184" value="29.3582" />
                              <Key frame="205" value="29.9735" />
                              <Key frame="238" value="29.9735" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="41" value="-9.6705" />
                              <Key frame="84" value="-12.3951" />
                              <Key frame="109" value="-11.692" />
                              <Key frame="132" value="6.32579" />
                              <Key frame="159" value="2.63435" />
                              <Key frame="184" value="5.2711" />
                              <Key frame="205" value="6.58948" />
                              <Key frame="238" value="2.28279" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="41" value="99.6668" />
                              <Key frame="84" value="100.458" />
                              <Key frame="109" value="84.2858" />
                              <Key frame="132" value="-1.67234" />
                              <Key frame="159" value="-2.02391" />
                              <Key frame="184" value="-5.97904" />
                              <Key frame="205" value="-5.97904" />
                              <Key frame="238" value="2.72224" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="pushup_action" id="6" localization="8" tooltip="" x="603" y="33">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="18" start_frame="1" end_frame="75" size="75">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="13" value="12.3903" />
                              <Key frame="43" value="14.5876" />
                              <Key frame="75" value="12.3903" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="13" value="-0.178186" />
                              <Key frame="43" value="-0.178186" />
                              <Key frame="75" value="-0.178186" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="13" value="-68.2943" />
                              <Key frame="43" value="-68.0306" />
                              <Key frame="75" value="-68.2943" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="13" value="-0.173378" />
                              <Key frame="43" value="-0.0854867" />
                              <Key frame="75" value="-0.173378" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="13" value="-0.261268" />
                              <Key frame="43" value="-79.8033" />
                              <Key frame="75" value="-0.261268" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="13" value="12.8298" />
                              <Key frame="43" value="-6.68218" />
                              <Key frame="75" value="12.8298" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="13" value="0.084" />
                              <Key frame="43" value="0.0912" />
                              <Key frame="75" value="0.084" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="13" value="-5.18321" />
                              <Key frame="43" value="-5.44688" />
                              <Key frame="75" value="-5.18321" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="13" value="0.61764" />
                              <Key frame="43" value="0.969218" />
                              <Key frame="75" value="0.61764" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="13" value="-0.524941" />
                              <Key frame="43" value="-0.524941" />
                              <Key frame="75" value="-0.524941" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="13" value="19.158" />
                              <Key frame="43" value="19.0701" />
                              <Key frame="75" value="19.158" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="13" value="26.0135" />
                              <Key frame="43" value="23.2889" />
                              <Key frame="75" value="26.0135" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="13" value="1.31597" />
                              <Key frame="43" value="43.3282" />
                              <Key frame="75" value="1.31597" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="13" value="-8.44001" />
                              <Key frame="43" value="12.9177" />
                              <Key frame="75" value="-8.44001" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="13" value="-67.9379" />
                              <Key frame="43" value="-67.9379" />
                              <Key frame="75" value="-67.9379" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="13" value="3.1665" />
                              <Key frame="43" value="3.25439" />
                              <Key frame="75" value="3.1665" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="13" value="1.40867" />
                              <Key frame="43" value="76.1166" />
                              <Key frame="75" value="1.40867" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="13" value="2.37068" />
                              <Key frame="43" value="7.81997" />
                              <Key frame="75" value="2.37068" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="13" value="0.0332" />
                              <Key frame="43" value="0.0196" />
                              <Key frame="75" value="0.0332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="13" value="-6.06693" />
                              <Key frame="43" value="-6.15482" />
                              <Key frame="75" value="-6.06693" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="13" value="-2.1949" />
                              <Key frame="43" value="-2.54646" />
                              <Key frame="75" value="-2.1949" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="13" value="-0.524941" />
                              <Key frame="43" value="-0.524941" />
                              <Key frame="75" value="-0.524941" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="13" value="19.2507" />
                              <Key frame="43" value="19.4265" />
                              <Key frame="75" value="19.2507" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="13" value="29.9735" />
                              <Key frame="43" value="27.2488" />
                              <Key frame="75" value="29.9735" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="13" value="2.28279" />
                              <Key frame="43" value="-37.0927" />
                              <Key frame="75" value="2.28279" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="13" value="2.72224" />
                              <Key frame="43" value="-12.3951" />
                              <Key frame="75" value="2.72224" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="pushup_restore" id="8" localization="8" tooltip="" x="750" y="107">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="245" size="245">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="10" value="12.3903" />
                              <Key frame="27" value="12.3903" />
                              <Key frame="45" value="12.3903" />
                              <Key frame="63" value="12.3903" />
                              <Key frame="83" value="12.3903" />
                              <Key frame="104" value="11.5114" />
                              <Key frame="124" value="12.0388" />
                              <Key frame="145" value="14.5876" />
                              <Key frame="168" value="14.5876" />
                              <Key frame="188" value="15.4665" />
                              <Key frame="238" value="-10.11" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="10" value="-0.178186" />
                              <Key frame="27" value="-0.178186" />
                              <Key frame="45" value="-0.178186" />
                              <Key frame="63" value="-0.178186" />
                              <Key frame="83" value="-0.178186" />
                              <Key frame="104" value="-0.441859" />
                              <Key frame="124" value="-0.178186" />
                              <Key frame="145" value="-0.353968" />
                              <Key frame="168" value="-0.353968" />
                              <Key frame="188" value="-0.969218" />
                              <Key frame="238" value="-0.61764" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="10" value="-68.2943" />
                              <Key frame="27" value="-69.0853" />
                              <Key frame="45" value="-69.0853" />
                              <Key frame="63" value="-68.7337" />
                              <Key frame="83" value="-62.4934" />
                              <Key frame="104" value="-62.4055" />
                              <Key frame="124" value="-62.4934" />
                              <Key frame="145" value="-37.6201" />
                              <Key frame="168" value="-33.2255" />
                              <Key frame="188" value="-33.577" />
                              <Key frame="238" value="5.2711" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="10" value="-0.173378" />
                              <Key frame="27" value="-2.72224" />
                              <Key frame="45" value="-3.0738" />
                              <Key frame="63" value="-0.349159" />
                              <Key frame="83" value="5.3638" />
                              <Key frame="104" value="8.17634" />
                              <Key frame="124" value="6.24271" />
                              <Key frame="145" value="4.13332" />
                              <Key frame="168" value="9.23104" />
                              <Key frame="188" value="7.29742" />
                              <Key frame="238" value="-6.15001" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="10" value="-0.261268" />
                              <Key frame="27" value="-2.63435" />
                              <Key frame="45" value="-2.72224" />
                              <Key frame="63" value="-3.24959" />
                              <Key frame="83" value="-3.51326" />
                              <Key frame="104" value="-1.22808" />
                              <Key frame="124" value="-2.45857" />
                              <Key frame="145" value="-1.75543" />
                              <Key frame="168" value="-3.24959" />
                              <Key frame="188" value="-2.89802" />
                              <Key frame="238" value="-23.5526" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="10" value="12.8298" />
                              <Key frame="27" value="12.3024" />
                              <Key frame="45" value="11.6872" />
                              <Key frame="63" value="11.6872" />
                              <Key frame="83" value="11.6872" />
                              <Key frame="104" value="12.7419" />
                              <Key frame="124" value="12.1267" />
                              <Key frame="145" value="12.2146" />
                              <Key frame="168" value="12.2146" />
                              <Key frame="188" value="10.5446" />
                              <Key frame="238" value="-70.2279" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="10" value="0.084" />
                              <Key frame="27" value="0.084" />
                              <Key frame="45" value="0.084" />
                              <Key frame="63" value="0.084" />
                              <Key frame="83" value="0.084" />
                              <Key frame="104" value="0.0908" />
                              <Key frame="124" value="0.086" />
                              <Key frame="145" value="0.0876" />
                              <Key frame="168" value="0.0876" />
                              <Key frame="188" value="0.0876" />
                              <Key frame="238" value="0.2912" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="10" value="-5.18321" />
                              <Key frame="27" value="-20.1248" />
                              <Key frame="45" value="-69.7836" />
                              <Key frame="63" value="-82.8795" />
                              <Key frame="83" value="-88.153" />
                              <Key frame="104" value="-88.3288" />
                              <Key frame="124" value="-88.153" />
                              <Key frame="145" value="-88.3288" />
                              <Key frame="168" value="-80.6822" />
                              <Key frame="188" value="-88.3288" />
                              <Key frame="238" value="7.82477" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="10" value="0.61764" />
                              <Key frame="27" value="1.23289" />
                              <Key frame="45" value="1.49656" />
                              <Key frame="63" value="-15.2908" />
                              <Key frame="83" value="-2.98591" />
                              <Key frame="104" value="-2.81013" />
                              <Key frame="124" value="-2.81013" />
                              <Key frame="145" value="-3.42537" />
                              <Key frame="168" value="-9.05044" />
                              <Key frame="188" value="-7.81997" />
                              <Key frame="238" value="6.3306" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="10" value="-0.524941" />
                              <Key frame="27" value="-4.56796" />
                              <Key frame="45" value="-10.6325" />
                              <Key frame="63" value="-30.1445" />
                              <Key frame="83" value="-29.3534" />
                              <Key frame="104" value="-28.914" />
                              <Key frame="124" value="-29.3534" />
                              <Key frame="145" value="-34.8027" />
                              <Key frame="168" value="-31.8144" />
                              <Key frame="188" value="-10.7204" />
                              <Key frame="238" value="-9.75358" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="10" value="19.158" />
                              <Key frame="27" value="30.8476" />
                              <Key frame="45" value="79.2759" />
                              <Key frame="63" value="121.288" />
                              <Key frame="83" value="120.585" />
                              <Key frame="104" value="122.255" />
                              <Key frame="124" value="121.376" />
                              <Key frame="145" value="121.376" />
                              <Key frame="168" value="121.728" />
                              <Key frame="188" value="121.552" />
                              <Key frame="238" value="-5.3638" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="10" value="26.0135" />
                              <Key frame="27" value="29.705" />
                              <Key frame="45" value="29.7929" />
                              <Key frame="63" value="28.914" />
                              <Key frame="83" value="28.1229" />
                              <Key frame="104" value="28.5624" />
                              <Key frame="124" value="27.0682" />
                              <Key frame="145" value="28.4745" />
                              <Key frame="168" value="28.4745" />
                              <Key frame="188" value="75.9361" />
                              <Key frame="238" value="82.8795" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="10" value="1.31597" />
                              <Key frame="27" value="15.5544" />
                              <Key frame="45" value="13.3571" />
                              <Key frame="63" value="12.8298" />
                              <Key frame="83" value="12.3903" />
                              <Key frame="104" value="14.2361" />
                              <Key frame="124" value="13.445" />
                              <Key frame="145" value="12.7419" />
                              <Key frame="168" value="12.7419" />
                              <Key frame="188" value="11.1598" />
                              <Key frame="238" value="11.3356" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="10" value="-8.44001" />
                              <Key frame="27" value="-4.83644" />
                              <Key frame="45" value="-4.83644" />
                              <Key frame="63" value="-7.73688" />
                              <Key frame="83" value="-2.90283" />
                              <Key frame="104" value="-3.69386" />
                              <Key frame="124" value="-5.01224" />
                              <Key frame="145" value="-3.86964" />
                              <Key frame="168" value="-3.86964" />
                              <Key frame="188" value="-4.92435" />
                              <Key frame="238" value="3.95273" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="10" value="-67.9379" />
                              <Key frame="27" value="-65.7406" />
                              <Key frame="45" value="-68.7289" />
                              <Key frame="63" value="-68.5531" />
                              <Key frame="83" value="-55.1936" />
                              <Key frame="104" value="-53.0842" />
                              <Key frame="124" value="14.944" />
                              <Key frame="145" value="28.3035" />
                              <Key frame="168" value="8.70368" />
                              <Key frame="188" value="-33.6601" />
                              <Key frame="238" value="5.10013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="10" value="3.1665" />
                              <Key frame="27" value="3.78175" />
                              <Key frame="45" value="3.34228" />
                              <Key frame="63" value="-0.700723" />
                              <Key frame="83" value="8.35212" />
                              <Key frame="104" value="12.6588" />
                              <Key frame="124" value="15.2077" />
                              <Key frame="145" value="-1.14019" />
                              <Key frame="168" value="4.13332" />
                              <Key frame="188" value="1.84813" />
                              <Key frame="238" value="6.41851" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="10" value="1.40867" />
                              <Key frame="27" value="3.34228" />
                              <Key frame="45" value="2.63916" />
                              <Key frame="63" value="1.32078" />
                              <Key frame="83" value="2.02391" />
                              <Key frame="104" value="2.90283" />
                              <Key frame="124" value="2.81494" />
                              <Key frame="145" value="2.28759" />
                              <Key frame="168" value="2.28759" />
                              <Key frame="188" value="2.55127" />
                              <Key frame="238" value="24.5242" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="10" value="2.37068" />
                              <Key frame="27" value="1.75543" />
                              <Key frame="45" value="1.75543" />
                              <Key frame="63" value="1.75543" />
                              <Key frame="83" value="1.57965" />
                              <Key frame="104" value="-4.22121" />
                              <Key frame="124" value="-3.25439" />
                              <Key frame="145" value="-3.43018" />
                              <Key frame="168" value="-3.43018" />
                              <Key frame="188" value="-2.72705" />
                              <Key frame="238" value="69.7836" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="10" value="0.0332" />
                              <Key frame="27" value="0.0332" />
                              <Key frame="45" value="0.0332" />
                              <Key frame="63" value="0.0332" />
                              <Key frame="83" value="0.0332" />
                              <Key frame="104" value="0.0332" />
                              <Key frame="124" value="0.0176001" />
                              <Key frame="145" value="0.0196" />
                              <Key frame="168" value="0.0196" />
                              <Key frame="188" value="0.0196" />
                              <Key frame="238" value="0.292" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="10" value="-6.06693" />
                              <Key frame="27" value="-15.9987" />
                              <Key frame="45" value="-67.4154" />
                              <Key frame="63" value="-81.3023" />
                              <Key frame="83" value="-61.3508" />
                              <Key frame="104" value="-61.5266" />
                              <Key frame="124" value="-88.6852" />
                              <Key frame="145" value="-86.4" />
                              <Key frame="168" value="-87.4547" />
                              <Key frame="188" value="-87.8941" />
                              <Key frame="238" value="7.90786" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="10" value="-2.1949" />
                              <Key frame="27" value="-1.49175" />
                              <Key frame="45" value="-2.107" />
                              <Key frame="63" value="18.196" />
                              <Key frame="83" value="19.5144" />
                              <Key frame="104" value="18.8112" />
                              <Key frame="124" value="18.1081" />
                              <Key frame="145" value="16.9655" />
                              <Key frame="168" value="1.58445" />
                              <Key frame="188" value="1.23289" />
                              <Key frame="238" value="-6.58948" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="10" value="-0.524941" />
                              <Key frame="27" value="-4.56796" />
                              <Key frame="45" value="-10.6325" />
                              <Key frame="63" value="-30.1445" />
                              <Key frame="83" value="-29.3534" />
                              <Key frame="104" value="-28.914" />
                              <Key frame="124" value="-29.3534" />
                              <Key frame="145" value="-34.8027" />
                              <Key frame="168" value="-31.8144" />
                              <Key frame="188" value="-10.7204" />
                              <Key frame="238" value="-9.75358" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="10" value="19.2507" />
                              <Key frame="27" value="22.6785" />
                              <Key frame="45" value="76.3803" />
                              <Key frame="63" value="121.117" />
                              <Key frame="83" value="98.2654" />
                              <Key frame="104" value="98.3532" />
                              <Key frame="124" value="57.3957" />
                              <Key frame="145" value="57.2199" />
                              <Key frame="168" value="88.0699" />
                              <Key frame="188" value="121.293" />
                              <Key frame="238" value="-5.09532" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="10" value="29.9735" />
                              <Key frame="27" value="29.9735" />
                              <Key frame="45" value="29.3582" />
                              <Key frame="63" value="30.4129" />
                              <Key frame="83" value="32.8739" />
                              <Key frame="104" value="77.1713" />
                              <Key frame="124" value="74.9741" />
                              <Key frame="145" value="74.183" />
                              <Key frame="168" value="74.9741" />
                              <Key frame="188" value="70.931" />
                              <Key frame="238" value="82.5327" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="10" value="2.28279" />
                              <Key frame="27" value="6.58948" />
                              <Key frame="45" value="5.2711" />
                              <Key frame="63" value="2.63435" />
                              <Key frame="83" value="6.32579" />
                              <Key frame="104" value="-11.692" />
                              <Key frame="124" value="-14.5924" />
                              <Key frame="145" value="-17.4929" />
                              <Key frame="168" value="-16.3503" />
                              <Key frame="188" value="-12.7467" />
                              <Key frame="238" value="-11.8678" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="10" value="2.72224" />
                              <Key frame="27" value="-5.97904" />
                              <Key frame="45" value="-5.97904" />
                              <Key frame="63" value="-2.02391" />
                              <Key frame="83" value="-1.67234" />
                              <Key frame="104" value="84.2858" />
                              <Key frame="124" value="83.1432" />
                              <Key frame="145" value="82.7916" />
                              <Key frame="168" value="82.7916" />
                              <Key frame="188" value="83.6705" />
                              <Key frame="238" value="4.74374" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="cnt" id="5" localization="8" tooltip="" x="452" y="274">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        self.ALMemory = self.session().service('ALMemory')
        self.tts = self.session().service('ALTextToSpeech')
        self.ALMemory.insertData("cnt_push_up",1)



    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        self.tts.say("Please touch my head to set the goal, or you can say the goal to me for example Nao do 6 push up.")

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box

    def onInput_incre(self):
        tmp = int(self.ALMemory.getData("cnt_push_up"))
        if tmp < 10:
            tmp += 1
            self.ALMemory.insertData("cnt_push_up",tmp)
            self.tts.say(str(tmp))
        else:
            self.tts.say("That's too much for me.")


    def onInput_decre(self):
        tmp = int(self.ALMemory.getData("cnt_push_up"))
        if tmp > 1:
            tmp -= 1
            self.ALMemory.insertData("cnt_push_up",tmp)
            self.tts.say(str(tmp))
        else:
            self.tts.say("I cannot do less than one push up.")]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Input name="incre" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                        <Input name="decre" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="6" />
                        <Output name="loop" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                      </Box>
                      <Box name="Tactile Head" id="9" localization="8" tooltip="Detect touch on head tactile sensor." x="288" y="126">
                        <bitmap>media/images/box/sensors/tactileHead.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
            self.onStopped() #~ activate output of the box
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                        <Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                        <Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="7" />
                        <Output name="frontTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The front tactile head sensor was touched." id="8" />
                        <Output name="middleTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The middle tactile head sensor was touched." id="9" />
                        <Output name="rearTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The rear tactile head sensor was touched." id="10" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="If &gt; 0" id="1" localization="8" tooltip="Transmit only if value is &gt; 0." x="260" y="17">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                </Box>
                                <Box name="If &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="256" y="119">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                </Box>
                                <Box name="If &gt; 0" id="3" localization="8" tooltip="Transmit only if value is &gt; 0." x="261" y="223">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="8" outputowner="1" indexofoutput="4" />
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="5" />
                                <Link inputowner="0" indexofinput="9" outputowner="2" indexofoutput="4" />
                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" />
                                <Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Head-sequence" type="Lock" timeout="0" />
                      </Box>
                      <Box name="repeataction" id="10" localization="8" tooltip="" x="440" y="27">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        self.ALMemory = self.session().service('ALMemory')
        self.tts = self.session().service('ALTextToSpeech')


    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        self.tts.say("You can follow me")
        self.onStopped() #activate the output of the box


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box

    def onInput_repeatminus(self):

        tmp = int(self.ALMemory.getData("cnt_push_up"))
        if tmp > 1:
            tmp -= 1
            self.ALMemory.insertData("cnt_push_up",tmp)
            self.tts.say(str(tmp))
            self.onStopped()
        else:
            self.tts.say("zero")
            self.finish()

#    def onOutput_finish(self):
#        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Input name="repeatminus" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                        <Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                        <Output name="finish" type="1" type_size="1" nature="1" inner="0" tooltip="" id="6" />
                      </Box>
                      <Box name="saysetgoal" id="7" localization="8" tooltip="" x="242" y="263">
                        <dialogFile>../saysetgoal/saysetgoal.dlg</dialogFile>
                        <bitmap>media/images/box/box-dialog.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Output name="confirm" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                      </Box>
                      <Box name="Play Sound" id="11" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="608" y="156">
                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../Inspiration.mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                        <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="40" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                        <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                        <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                        <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                  <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.player = self.session().service('ALAudioPlayer')
        self.playerStop = self.session().service('ALAudioPlayer') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.pCall("playFileInLoop",p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.pCall("playFileFromPosition",p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                  <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                  <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                  <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                </Box>
                                <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                  <bitmap>media/images/box/folder.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                  <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                </Box>
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Audio player" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="5" indexofinput="5" outputowner="9" indexofoutput="8" />
                      <Link inputowner="5" indexofinput="4" outputowner="9" indexofoutput="10" />
                      <Link inputowner="9" indexofinput="2" outputowner="5" indexofoutput="7" />
                      <Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="9" />
                      <Link inputowner="6" indexofinput="2" outputowner="10" indexofoutput="5" />
                      <Link inputowner="8" indexofinput="2" outputowner="10" indexofoutput="6" />
                      <Link inputowner="10" indexofinput="4" outputowner="6" indexofoutput="4" />
                      <Link inputowner="9" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="7" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="10" indexofinput="2" outputowner="7" indexofoutput="5" />
                      <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="9" />
                      <Link inputowner="11" indexofinput="2" outputowner="7" indexofoutput="5" />
                      <Link inputowner="11" indexofinput="3" outputowner="8" indexofoutput="4" />
                      <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="3" outputowner="8" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="5" />
            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="12" indexofinput="2" outputowner="3" indexofoutput="5" />
            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
